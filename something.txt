import datetime

class OnlineSalesRegisterCollector:

    def __init__(self):
        self.__name_items = []
        self.__number_items = 0
        self.__item_price = {'чипсы': 50, 'кола': 100, 'печенье': 45, 'молоко': 55, 'кефир': 70}
        self.__tax_rate = {'чипсы': 20, 'кола': 20, 'печенье': 20, 'молоко': 10, 'кефир': 10}


      # 1. Печать в чеке названия и количество товаров.
    @property
    def name_items(self):
        return self.__name_items

    @property
    def number_items(self):
        return self.__number_items


    #2.Добавить товар в чек
    def add_item_to_cheque(self, name):
        if len(name) == 0 or len(name) > 40:
            raise ValueError(f'Нельзя добавить товар, если в его названии нет символов или их больше 40')
        elif name not in self.__item_price:
            raise NameError('Позиция отсутствует в товарном справочнике')
        else:
            self.__name_items.append(name)
            self.__number_items += 1


    #3. Удалить товар из чека
    def delete_item_from_check(self, name):
        if name in self.__name_items:
            self.__name_items.remove(name)
            self.__number_items -= 1
        else:
            raise NameError('Позиция отсутствует в чеке')


    #4. Рассчитать общую стоимость товара
    def check_amount(self):
        total  = []
        for name in self.__name_items:
            total.append(self.__item_price[name])

        if self.__number_items > 10:
            return round(sum(total)*0.9, 2)
        return round(sum(total), 2)

    #5. Вычислить НДС для товаров со ставкой 20%
    def twenty_percent_tax_calculation(self):
        twenty_percent_tax=[]
        total = []

        for name in self.__name_items:
            if self.__tax_rate[name] == 20:
                twenty_percent_tax.append(name)

        for name in twenty_percent_tax:
            total.append(self.__item_price[name])

        nds_total = sum(total) * 0.2

        if self.__number_items > 10:
            nds_total *=  0.9

        return round(nds_total, 2)


    #6. Вычислить НДС для товаров со ставкой 10%
    def ten_percent_tax_calculation(self):
        ten_percent_tax=[]
        total = []

        for name in self.__name_items:
            if self.__tax_rate[name] == 10:
                ten_percent_tax.append(name)

        for name in ten_percent_tax:
            total.append(self.__item_price[name])

        nds_total = sum(total) * 0.1

        if self.__number_items > 10:
            nds_total *=  0.9

        return round(nds_total, 2)

    #7. Общая сумма налогов
    def total_tax(self):
        total_tax = self.ten_percent_tax_calculation() + self.twenty_percent_tax_calculation()
        return round(total_tax, 2)

    #8. Вернуть номер телефона покупателя
    @staticmethod
    def get_telephone_number(telephone_number):
        if not telephone_number.isdigit():
            raise ValueError('Необходимо ввести цифры')

        if len(telephone_number) > 10:
            raise ValueError('Необходимо ввести 10 цифр после "+7"')

        return f'+7{telephone_number}'





check = OnlineSalesRegisterCollector()
check.add_item_to_cheque('чипсы')
check.add_item_to_cheque('кола')
check.add_item_to_cheque('кефир')
print(check.name_items)
print(check.number_items)
print(f'Общая стоимость товаров - ' + str(check.check_amount()) +' р.')

print('\n' + str(check.twenty_percent_tax_calculation()))
print(check.ten_percent_tax_calculation())
print(f'Общая сумма НДС - ' + str(check.total_tax()))

check.delete_item_from_check('кола')
print('\n' + str(check.name_items))
print(check.number_items)
print(f'Общая стоимость товаров - ' + str(check.check_amount()) +' р.')

print('\n' + f'Телефон клиента: ' + str(check.get_telephone_number('9123456789')))
print('Телефон клиента: ' + str(check.get_telephone_number('12345678')))
print('Телефон клиента: ' + str(check.get_telephone_number('1234567.8')))